#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const designVariants = {
  original: {
    name: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω',
    file: 'style-original.css'
  },
  variant1: {
    name: '–í–∞—Ä–∏–∞–Ω—Ç 1: –ö–∞—Ä—Ç–æ—á–∫–∏ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π',
    file: 'style-backup.css'
  },
  variant2: {
    name: '–í–∞—Ä–∏–∞–Ω—Ç 2: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å —Ç–µ–≥–∞–º–∏',
    file: 'style-variant2.css'
  }
};

function switchDesign(variant) {
  const cssDir = path.join(__dirname, 'css');
  const currentStylePath = path.join(cssDir, 'style.css');
  const targetStylePath = path.join(cssDir, designVariants[variant].file);
  
  if (!fs.existsSync(targetStylePath)) {
    console.error(`‚ùå –§–∞–π–ª ${targetStylePath} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    return;
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞
    const tempBackup = path.join(cssDir, 'style-temp.css');
    fs.copyFileSync(currentStylePath, tempBackup);
    
    // –ö–æ–ø–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
    fs.copyFileSync(targetStylePath, currentStylePath);
    
    console.log(`‚úÖ –î–∏–∑–∞–π–Ω –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞: ${designVariants[variant].name}`);
    console.log(`üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: css/style-temp.css`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –¥–∏–∑–∞–π–Ω–∞:', error.message);
  }
}

function showHelp() {
  console.log('üé® –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–∏–∑–∞–π–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–¥–µ–ª–∏\n');
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node switch-design.js [–≤–∞—Ä–∏–∞–Ω—Ç]\n');
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:');
  Object.entries(designVariants).forEach(([key, variant]) => {
    console.log(`  ${key.padEnd(10)} - ${variant.name}`);
  });
  console.log('\n–ü—Ä–∏–º–µ—Ä—ã:');
  console.log('  node switch-design.js original   # –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –¥–∏–∑–∞–π–Ω—É');
  console.log('  node switch-design.js variant1   # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–Ω—ã–π –¥–∏–∑–∞–π–Ω');
  console.log('  node switch-design.js variant2   # –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å —Ç–µ–≥–∞–º–∏');
}

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const variant = process.argv[2];

if (!variant || variant === '--help' || variant === '-h') {
  showHelp();
} else if (designVariants[variant]) {
  switchDesign(variant);
} else {
  console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: ${variant}`);
  console.log('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:', Object.keys(designVariants).join(', '));
}